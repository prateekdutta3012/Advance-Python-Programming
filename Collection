The collections module in Python implements specialized container datatypes providing alternatives to Pythonâ€™s general purpose built-in containers, dict, list, set, and tuple.
The following tools exist:

namedtuple : factory function for creating tuple subclasses with named fields
OrderedDict : dict subclass that remembers the order entries were added
Counter : dict subclass for counting hashable objects
defaultdict : dict subclass that calls a factory function to supply missing values
deque : list-like container with fast appends and pops on either end

Namedtuple

namedtuples are easy to create, lightweight object types. They assign meaning to each position in a tuple and allow for more readable, self-documenting code. They can be used 
wherever regular tuples are used, and they add the ability to access fields by name instead of position index.
